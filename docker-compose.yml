version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:17-alpine
    container_name: seminote-postgres
    environment:
      POSTGRES_DB: seminote
      POSTGRES_USER: seminote
      POSTGRES_PASSWORD: seminote123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - seminote-network

  redis:
    image: redis:7.4-alpine
    container_name: seminote-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - seminote-network

  # Monitoring Services
  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: seminote-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - seminote-network

  grafana:
    image: grafana/grafana:11.4.0
    container_name: seminote-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - seminote-network

  # Application Services (will be added as they're developed)
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: seminote-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/seminote
      SPRING_REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    networks:
      - seminote-network
    profiles:
      - services

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: seminote-user-service
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/seminote
      SPRING_REDIS_HOST: redis
    depends_on:
      - postgres
      - redis
    networks:
      - seminote-network
    profiles:
      - services

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  seminote-network:
    driver: bridge
